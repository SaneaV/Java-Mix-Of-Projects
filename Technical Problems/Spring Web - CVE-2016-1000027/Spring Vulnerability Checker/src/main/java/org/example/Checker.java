package org.example;

import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.Reader;
import java.nio.charset.StandardCharsets;

public class Checker {

  private static final String FILE_PATH = "FILE_NAME";
  private static final String UNEXPECTED_ERROR = "An unexpected error occurred while reading file %s";
  private static final String VULNERABLE_CLASS = "HttpInvokerServiceExporter";
  private static final String VULNERABILITY_FOUND = "Your project contains CVE-2016-1000027 vulnerability";
  private static final String VULNERABILITY_NOT_FOUND = "Your project doesn't contain CVE-2016-1000027 vulnerability";

  public static void main(String[] args) {
    final String filePath = System.getenv(FILE_PATH);
    final StringBuilder textBuilder = getTextFromFile(filePath);
    System.out.println(checkIfTextContainsClass(textBuilder) ? VULNERABILITY_FOUND : VULNERABILITY_NOT_FOUND);
  }

  private static StringBuilder getTextFromFile(String filePath) {
    final StringBuilder textBuilder = new StringBuilder();

    try (final FileInputStream inputStream = new FileInputStream(filePath)) {
      try (Reader reader = new BufferedReader(new InputStreamReader(inputStream, StandardCharsets.UTF_8))) {
        int c;
        while ((c = reader.read()) != -1) {
          textBuilder.append((char) c);
        }
      }
    } catch (IOException e) {
      System.out.printf((UNEXPECTED_ERROR) + "%n", filePath);
    }
    return textBuilder;
  }

  private static boolean checkIfTextContainsClass(StringBuilder textBuilder) {
    return textBuilder.indexOf(VULNERABLE_CLASS) != -1;
  }
}